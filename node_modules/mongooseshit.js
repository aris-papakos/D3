var fs = require('fs');
var parse = require('csv-parse');
var mongoose = require('mongoose');
var inputFile='../toy_data.csv';

// run backend server

var http = require('http');
http.createServer(function (req, res) {
  res.writeHead(200, {'Content-Type': 'text/plain'});
  res.end('Hello World\n');
}).listen(1337, '127.0.0.1');
console.log('Server running at http://127.0.0.1:1337/');

// mongoose db Schema definition + initializations

mongoose.connect('mongodb://localhost/test');
var db = mongoose.connection;
db.on('error', console.error.bind(console, 'connection error:'));
db.once('open', function() {
	console.log("mongodb is connected");
	read_and_insert();
	close_connection();
	console.log('Ended!');
});

var crimeSchema = mongoose.Schema({
	Month: String,
	Longitude: String,
	Latitude: String,
	Location: String,
	Crimetype: String,
	Lastoutcomecategory: String
});

var Crime = mongoose.model('Crime', crimeSchema);

// start reading the csv and saving files to db


//read lines

function read_and_insert(){
	console.log('Reading csv and adding to MongoDB...');
	fs.createReadStream(inputFile)
		.pipe(parse({delimiter: ','}))
		.on('data', function(csvrow) {
			//console.log(csvrow[0]);
			var tempcrime = new Crime({ Month: csvrow[0],
				Longitude: csvrow[1],
				Latitude: csvrow[2],
				Location: csvrow[3],
				Crimetype: csvrow[4],
				Lastoutcomecategory: csvrow[5],
			});
			//save tempcrime into mongodb
			/*db.collection('Crime').insertOne(tempcrime,
				function(err, res) {
					if (err) throw err;
					console.log("Document inserted");
				});*/
			tempcrime.save(function (err) {
				if (err) return handleError(err);
				console.log("Document inserted");
			})
		});


	//test by retrieving an item from mongodb and printing it
	console.log("Listing all saved crimes:");
	/*db.collection('Crime').find(function (err, crimes) {
	  if (err) return console.error(err);
	  console.log(crimes);*/
	  //db.collection('Crime').find().forEach(printjson); 
	  console.log(db.collection('Crime').count())
}

function close_connection(){
	db.close();
}
	